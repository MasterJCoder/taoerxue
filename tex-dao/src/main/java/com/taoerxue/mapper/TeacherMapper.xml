<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.taoerxue.mapper.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.taoerxue.pojo.Teacher" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="e_id" property="eId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="experience_age" property="experienceAge" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
    <result column="parent_type_id" property="parentTypeId" jdbcType="INTEGER" />
    <result column="parent_type_name" property="parentTypeName" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, e_id, name, experience_age, type_id, type_name, parent_type_id, parent_type_name, 
    description, photo, create_time, update_time, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.taoerxue.pojo.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taoerxue.pojo.TeacherExample" >
    delete from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taoerxue.pojo.Teacher" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into teacher (e_id, name, experience_age, 
      type_id, type_name, parent_type_id, 
      parent_type_name, description, photo, 
      create_time, update_time, status
      )
    values (#{eId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{experienceAge,jdbcType=INTEGER}, 
      #{typeId,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, #{parentTypeId,jdbcType=INTEGER}, 
      #{parentTypeName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taoerxue.pojo.Teacher" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eId != null" >
        e_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="experienceAge != null" >
        experience_age,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="typeName != null" >
        type_name,
      </if>
      <if test="parentTypeId != null" >
        parent_type_id,
      </if>
      <if test="parentTypeName != null" >
        parent_type_name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eId != null" >
        #{eId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="experienceAge != null" >
        #{experienceAge,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="parentTypeId != null" >
        #{parentTypeId,jdbcType=INTEGER},
      </if>
      <if test="parentTypeName != null" >
        #{parentTypeName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taoerxue.pojo.TeacherExample" resultType="java.lang.Integer" >
    select count(*) from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update teacher
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eId != null" >
        e_id = #{record.eId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.experienceAge != null" >
        experience_age = #{record.experienceAge,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.typeName != null" >
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentTypeId != null" >
        parent_type_id = #{record.parentTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.parentTypeName != null" >
        parent_type_name = #{record.parentTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null" >
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teacher
    set id = #{record.id,jdbcType=INTEGER},
      e_id = #{record.eId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      experience_age = #{record.experienceAge,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      parent_type_id = #{record.parentTypeId,jdbcType=INTEGER},
      parent_type_name = #{record.parentTypeName,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taoerxue.pojo.Teacher" >
    update teacher
    <set >
      <if test="eId != null" >
        e_id = #{eId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="experienceAge != null" >
        experience_age = #{experienceAge,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null" >
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="parentTypeId != null" >
        parent_type_id = #{parentTypeId,jdbcType=INTEGER},
      </if>
      <if test="parentTypeName != null" >
        parent_type_name = #{parentTypeName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taoerxue.pojo.Teacher" >
    update teacher
    set e_id = #{eId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      experience_age = #{experienceAge,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      type_name = #{typeName,jdbcType=VARCHAR},
      parent_type_id = #{parentTypeId,jdbcType=INTEGER},
      parent_type_name = #{parentTypeName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>